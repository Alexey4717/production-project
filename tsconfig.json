{
    "compilerOptions": {
        "outDir": "./dist/",
        // Подсвечивает все места где не указан тип
        // Однако это не означает, что теперь вовсе нельзя использовать any.
        // Это означает лишь, что в подобных ситуация разработчик должен явно писать any,
        "noImplicitAny": true,
        "module": "ESNext", // различные способы модульной сборки
        // чтобы работал динамический импорт (lazy)
        "target": "ES6", // В какую спецификацию компилируем: для поддержки большинства браузеров
        "jsx": "react-jsx", // чтобы не импортить React from react и читался jsx
        "allowJs": true, // Компилятор будет обрабатывать не только TS файлы, но и JS файлы
        "strict": true,
        "moduleResolution": "node", // определяет какие импорты будут, в 99% случаев используется node (еще есть classic)
        // esModuleInterop позволяет работать с пакетами, которые используют
        // common js как с обычными пакета с помощью import (require() module.export) = common js
        // import Moment from 'moment';
        // без флага esModuleInterop результат undefined
        // console.log(Moment);
        // c флагом результат [object Object]
        // console.log(Moment);
        "esModuleInterop": true,
        "resolveJsonModule": true,
        "types": ["node"],
        // Если какая-либо библиотека не имеет default import,
        // лоадеры вроде ts-loader или babel-loader автоматически создают их
        // вместо такого импорта
        // import * as React from 'react';
        // можно писать такой
        // import React from 'react';
        "allowSyntheticDefaultImports": true,
        "isolatedModules": true,
        "baseUrl": ".", // Конфигурирование начала абсолютного пути, чтобы не указывать в импортах в начале точку
        // Указываем, что абсолютные импорты будут из src
        "paths": {
            "@/*": ["./src/*"]
            // "react/jsx-runtime": ["node_modules/react/jsx-runtime"]
        }
    },
    "ts-node": {
        "compilerOptions": {
            "module": "CommonJS"
        }
    },
    "include": [
        "./config/jest/setupTests.ts",
        "./config/storybook",
        "./src/**/*.ts",
        "./src/**/*.tsx"
    ]
}
