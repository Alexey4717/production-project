name: linting, testing, building
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: true
jobs:
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v4
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: yarn install --frozen-lockfile
      - name: build production project
        run: yarn build:prod
        if: always()
      - name: build storybook
        run: yarn storybook:build
        if: always()
      - name: screenshot testing
        run: yarn test:ui:ci
        if: always()
      - name: unit testing
        if: always()
        run: yarn run test:unit
      - name: Generate HTML report
        run: yarn run test:ui:report
        if: always()
      - name: move loki
        run: mv .loki reports/
        if: always()
      - name: Setup Pages
        uses: actions/configure-pages@v2
        if: always()
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        if: always()
        with:
          name: build-artifact
          path: 'reports'
      - name: Deploy to GitHub Pages
        id: deployment
        if: always()
        uses: actions/deploy-pages@v1

  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v4
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: yarn install --frozen-lockfile
      - name: linting typescript
        run: yarn run lint:ts
        if: always()
      - name: linting css
        run: yarn run lint:scss
